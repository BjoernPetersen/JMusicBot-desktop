version: 2.1

executors:
  jfx:
    docker:
      - image: nishtahir/openjfx:8-jdk
    environment:
      GRADLE_OPTS: -Dorg.gradle.daemon=false

commands:
  with_cache:
    parameters:
      steps:
        type: steps
    steps:
      - restore_cache:
          keys:
            - v4-{{ checksum "build.gradle.kts" }}-{{ checksum "buildSrc/src/main/kotlin/Plugin.kt" }}-{{ checksum "buildSrc/src/main/kotlin/Lib.kt" }}
            - v4-{{ checksum "build.gradle.kts" }}-{{ checksum "buildSrc/src/main/kotlin/Plugin.kt" }}
            - v4-{{ checksum "build.gradle.kts" }}
            - v4-
      - steps: << parameters.steps >>

  download_artifact:
    parameters:
      project:
        type: string
      branch:
        type: string
      path:
        type: string
      token:
        type: string
      user:
        type: string
        default: BjoernPetersen
    steps:
      - run:
          working_directory: bundle/musicbot-desktop/plugins
          command: python ../../../.circleci/load_artifact.py -p << parameters.project >> -t << parameters.token >> -a << parameters.path >> -b << parameters.branch >> -u << parameters.user >>

jobs:
  compile:
    executor: jfx
    steps:
      - checkout
      - with_cache:
          steps:
            - run:
                command: ./gradlew classes
                name: Compiling main classes
            - save_cache:
                key: v4-{{ checksum "build.gradle.kts" }}-{{ checksum "buildSrc/src/main/kotlin/Plugin.kt" }}-{{ checksum "buildSrc/src/main/kotlin/Lib.kt" }}
                paths:
                  - ~/.gradle
            - persist_to_workspace:
                root: .
                paths:
                  - build
                  - buildSrc/build

  check:
    executor: jfx
    steps:
      - checkout
      - with_cache:
          steps:
            - attach_workspace:
                at: .
            - run:
                command: ./gradlew check
                name: Running tests
            - store_test_results:
                path: build/test-results
            - store_artifacts:
                path: build/reports

  build:
    executor: jfx
    steps:
      - checkout
      - with_cache:
          steps:
            - attach_workspace:
                at: .
            - run:
                command: ./gradlew distZip installDist
                name: Building distribution zip
            - run:
                command: mv build/distributions/musicbot-desktop-*.zip build/distributions/musicbot-desktop.zip
                name: Renaming distributions zip
            - store_artifacts:
                path: build/distributions
                destination: dist
            - persist_to_workspace:
                root: .
                paths:
                  - build
                  - buildSrc/build


  bundle:
    docker:
      - image: python:3-slim
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Installing python dependencies
          command: pip install -r .circleci/requirements.txt
      - run:
          name: Installing zip
          command: apt update && apt install zip -y
      - run:
          name: Preparing directory
          command: |
            mkdir bundle
            cp -r build/install/* bundle/musicbot-desktop
            mkdir bundle/musicbot-desktop/plugins
      - download_artifact:
          project: MusicBot-YouTube
          branch: $CIRCLE_BRANCH
          path: dist/musicbot-youtube.jar
          token: $CIRCLE_TOKEN_YOUTUBE
      - download_artifact:
          project: MusicBot-mpv
          branch: $CIRCLE_BRANCH
          path: dist/musicbot-mpv.jar
          token: $CIRCLE_TOKEN_MPV
      - download_artifact:
          project: MusicBot-Spotify
          branch: $CIRCLE_BRANCH
          path: dist/musicbot-spotify.jar
          token: $CIRCLE_TOKEN_SPOTIFY
      - download_artifact:
          project: MusicBot-Mp3Provider
          branch: $CIRCLE_BRANCH
          path: dist/musicbot-mp3provider.jar
          token: $CIRCLE_TOKEN_MP3
      - download_artifact:
          user: FelixGail
          project: MusicBot-gplaymusic
          branch: $CIRCLE_BRANCH
          path: dist/musicbot-gplaymusic.jar
          token: $CIRCLE_TOKEN_PLAY_MUSIC
      - run:
          name: Zipping bundle
          working_directory: bundle
          command: |
            zip -r musicbot-desktop-bundle.zip musicbot-desktop
            rm -rf musicbot-desktop
      - store_artifacts:
          path: bundle
          destination: bundle

workflows:
  full_workflow:
    jobs:
      - compile
      - check:
          requires:
            - compile
      - build:
          requires:
            - compile
      - bundle:
          requires:
            - build
          filters:
            branches:
              only:
                - master
                - develop
